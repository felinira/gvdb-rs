[package]
name = "gvdb"
version = "0.5.3"
edition = "2021"
description = "Read and write GLib GVariant database files"
repository = "https://github.com/felinira/gvdb-rs"
license = "MIT"
keywords = ["gvdb", "glib", "gresource", "compile-resources"]
categories = ["gui", "data-structures", "encoding"]
exclude = ["test/c"]
rust-version = "1.75"

[package.metadata.docs.rs]
all-features = true

[dependencies]
safe-transmute = "0.11"
byteorder = "1.4"
serde = { version = "1.0", features = ["derive"] }
zvariant = { version = "4.0", default-features = false, features = [
    "gvariant",
] }

flate2 = { version = "1.0", optional = true }
glib = { version = "0.19", optional = true }
quick-xml = { version = "0.31", optional = true, features = ["serialize"] }
memmap2 = { version = "0.9", optional = true }
serde_json = { version = "1.0", optional = true }
walkdir = { version = "2.3", optional = true }

[dev-dependencies]
# Use zlib for binary compatibility in tests
flate2 = { version = "1.0", features = ["zlib"] }
glib = "0.19"
lazy_static = "1.4"
matches = "0.1"
pretty_assertions = "1.2"
serde_json = "1.0"

[features]
mmap = ["dep:memmap2"]
gresource = ["dep:quick-xml", "dep:serde_json", "dep:flate2", "dep:walkdir"]
glib = ["dep:glib"]
default = []
